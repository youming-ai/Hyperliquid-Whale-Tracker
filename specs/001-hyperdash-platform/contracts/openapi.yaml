openapi: 3.0.3
info:
  title: HyperDash Platform API
  description: API for HyperDash derivatives trading intelligence and copy trading platform
  version: 1.0.0
  contact:
    name: HyperDash Team
    email: api@hyperdash.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.hyperdash.io/v1
    description: Production server
  - url: https://staging-api.hyperdash.io/v1
    description: Staging server

paths:
  # Market Data Endpoints
  /market/overview:
    get:
      summary: Get market overview data
      description: Retrieve current market metrics including OI, funding rates, L/S ratios
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            example: "BTC-PERP"
        - name: exchange
          in: query
          schema:
            type: string
            default: "hyperliquid"
      responses:
        '200':
          description: Market overview data retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOverview'

  /market/ohlcv:
    get:
      summary: Get OHLCV data
      description: Retrieve Open, High, Low, Close, Volume data for specified timeframes
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: timeframe
          in: query
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 4h, 1d]
            default: "1h"
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 1000
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OHLCV data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OHLCV'

  /market/heatmap:
    get:
      summary: Get liquidation heatmap data
      description: Retrieve liquidation heatmap bins for specified symbols and time windows
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          schema:
            type: string
        - name: window
          in: query
          schema:
            type: string
            enum: [1h, 4h, 12h, 24h]
            default: "4h"
        - name: bin_count
          in: query
          schema:
            type: integer
            default: 50
            maximum: 200
      responses:
        '200':
          description: Heatmap data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/HeatmapBin'

  # Trader Endpoints
  /traders/top:
    get:
      summary: Get top traders ranking
      description: Retrieve ranked list of top performing traders
      tags:
        - Traders
      parameters:
        - name: symbol
          in: query
          schema:
            type: string
        - name: window
          in: query
          schema:
            type: string
            enum: [1d, 7d, 30d, 90d]
            default: "30d"
        - name: metric
          in: query
          schema:
            type: string
            enum: [pnl, return, sharpe, win_rate, volume]
            default: "sharpe"
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 500
        - name: filters
          in: query
          schema:
            type: object
            properties:
              min_return:
                type: number
              max_drawdown:
                type: number
              min_trades:
                type: integer
      responses:
        '200':
          description: Top traders data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TraderRank'

  /traders/{traderId}:
    get:
      summary: Get trader profile
      description: Retrieve detailed trader profile and performance metrics
      tags:
        - Traders
      parameters:
        - name: traderId
          in: path
          required: true
          schema:
            type: string
        - name: window
          in: query
          schema:
            type: string
            enum: [7d, 30d, 90d]
            default: "30d"
      responses:
        '200':
          description: Trader profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraderProfile'

  /traders/{traderId}/events:
    get:
      summary: Get trader events feed
      description: Retrieve recent trading events for a specific trader
      tags:
        - Traders
      parameters:
        - name: traderId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
            maximum: 200
        - name: event_types
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [open, close, add, reduce, liquidation]
      responses:
        '200':
          description: Trader events retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TraderEvent'

  # Copy Trading Endpoints
  /copy/strategies:
    get:
      summary: List copy strategies
      description: Retrieve user's copy trading strategies
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Strategies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CopyStrategy'

    post:
      summary: Create copy strategy
      description: Create a new copy trading strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCopyStrategyRequest'
      responses:
        '201':
          description: Strategy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyStrategy'

  /copy/strategies/{strategyId}:
    get:
      summary: Get copy strategy details
      description: Retrieve detailed information about a specific copy strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyStrategyDetail'

    put:
      summary: Update copy strategy
      description: Update existing copy strategy parameters
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCopyStrategyRequest'
      responses:
        '200':
          description: Strategy updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyStrategy'

    delete:
      summary: Delete copy strategy
      description: Delete a copy trading strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy deleted successfully

  /copy/strategies/{strategyId}/allocations:
    get:
      summary: Get strategy allocations
      description: Retrieve trader allocations for a copy strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Allocations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CopyAllocation'

    put:
      summary: Update strategy allocations
      description: Update trader allocations for a copy strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAllocationsRequest'
      responses:
        '200':
          description: Allocations updated successfully

  /copy/strategies/{strategyId}/start:
    post:
      summary: Start copy strategy
      description: Activate a copy trading strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_wallet_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Strategy started successfully

  /copy/strategies/{strategyId}/stop:
    post:
      summary: Stop copy strategy
      description: Deactivate a copy trading strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy stopped successfully

  /copy/strategies/{strategyId}/status:
    get:
      summary: Get strategy status
      description: Retrieve current status and performance metrics for a copy strategy
      tags:
        - Copy Trading
      security:
        - bearerAuth: []
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyStrategyStatus'

  # Wallet Management
  /wallets/agent:
    get:
      summary: List agent wallets
      description: Retrieve user's agent wallets
      tags:
        - Wallets
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Agent wallets retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgentWallet'

    post:
      summary: Create agent wallet
      description: Create a new agent wallet for copy trading
      tags:
        - Wallets
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentWalletRequest'
      responses:
        '201':
          description: Agent wallet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentWallet'

  # Billing Endpoints
  /billing/fees:
    get:
      summary: Get fee history
      description: Retrieve user's fee history and statements
      tags:
        - Billing
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - name: fee_type
          in: query
          schema:
            type: string
            enum: [trading, copy, management, performance]
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            maximum: 1000
      responses:
        '200':
          description: Fee history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeeRecord'
                  summary:
                    $ref: '#/components/schemas/FeeSummary'

  /billing/export:
    post:
      summary: Export billing data
      description: Export billing data in CSV or PDF format
      tags:
        - Billing
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                format:
                  type: string
                  enum: [csv, pdf]
                  default: "csv"
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                include_details:
                  type: boolean
                  default: true
      responses:
        '200':
          description: Export generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                    format: uri
                  expires_at:
                    type: string
                    format: date-time

components:
  schemas:
    # Market Data Schemas
    MarketOverview:
      type: object
      properties:
        symbol:
          type: string
          example: "BTC-PERP"
        exchange:
          type: string
          example: "hyperliquid"
        timestamp:
          type: string
          format: date-time
        price:
          type: number
          format: decimal
          example: 65543.21
        mark_price:
          type: number
          format: decimal
        index_price:
          type: number
          format: decimal
        funding_rate:
          type: number
          format: decimal
        next_funding_time:
          type: string
          format: date-time
        open_interest:
          type: number
          format: decimal
        volume_24h:
          type: number
          format: decimal
        long_short_ratio:
          type: number
          format: decimal
        volatility_24h:
          type: number
          format: decimal

    OHLCV:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        open:
          type: number
          format: decimal
        high:
          type: number
          format: decimal
        low:
          type: number
          format: decimal
        close:
          type: number
          format: decimal
        volume:
          type: number
          format: decimal
        trade_count:
          type: integer

    HeatmapBin:
      type: object
      properties:
        price_bin_center:
          type: number
          format: decimal
        price_bin_width:
          type: number
          format: decimal
        liquidation_volume:
          type: number
          format: decimal
        liquidation_count:
          type: integer
        liquidation_notional:
          type: number
          format: decimal
        confidence_score:
          type: number
          format: decimal
          minimum: 0
          maximum: 1

    # Trader Schemas
    TraderRank:
      type: object
      properties:
        trader_id:
          type: string
        alias:
          type: string
        public_score:
          type: number
          format: decimal
        pnl:
          type: number
          format: decimal
        return_pct:
          type: number
          format: decimal
        sharpe_ratio:
          type: number
          format: decimal
        max_drawdown:
          type: number
          format: decimal
        win_rate:
          type: number
          format: decimal
        trade_count:
          type: integer
        volume:
          type: number
          format: decimal
        avg_leverage:
          type: number
          format: decimal
        tags:
          type: array
          items:
            type: string

    TraderProfile:
      type: object
      properties:
        trader_id:
          type: string
        alias:
          type: string
        public_score:
          type: number
          format: decimal
        tags:
          type: array
          items:
            type: string
        performance:
          type: object
          properties:
            pnl:
              type: number
              format: decimal
            return_pct:
              type: number
              format: decimal
            sharpe_ratio:
              type: number
              format: decimal
            max_drawdown:
              type: number
              format: decimal
            win_rate:
              type: number
              format: decimal
            avg_hold_time_hours:
              type: number
              format: decimal
        trading_activity:
          type: object
          properties:
            trade_count:
              type: integer
            volume:
              type: number
              format: decimal
            turnover:
              type: number
              format: decimal
            avg_trade_size:
              type: number
              format: decimal
        risk_metrics:
          type: object
          properties:
            avg_leverage:
              type: number
              format: decimal
            max_leverage:
              type: number
              format: decimal
            var_95:
              type: number
              format: decimal
        symbol_preferences:
          type: array
          items:
            type: object
            properties:
              symbol:
                type: string
              volume_pct:
                type: number
                format: decimal
              pnl:
                type: number
                format: decimal

    TraderEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        trader_id:
          type: string
        symbol:
          type: string
        action:
          type: string
          enum: [open, close, add, reduce, liquidation]
        side:
          type: string
          enum: [long, short]
        quantity:
          type: number
          format: decimal
        price:
          type: number
          format: decimal
        exposure_change:
          type: number
          format: decimal
        leverage:
          type: number
          format: decimal

    # Copy Trading Schemas
    CopyStrategy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [paused, active, error, terminated]
        mode:
          type: string
          enum: [portfolio, single_trader]
        max_leverage:
          type: number
          format: decimal
        max_position_usd:
          type: number
          format: decimal
        slippage_bps:
          type: integer
        min_order_usd:
          type: number
          format: decimal
        follow_new_entries_only:
          type: boolean
        auto_rebalance:
          type: boolean
        total_pnl:
          type: number
          format: decimal
        total_fees:
          type: number
          format: decimal
        alignment_rate:
          type: number
          format: decimal
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CopyStrategyDetail:
      allOf:
        - $ref: '#/components/schemas/CopyStrategy'
        - type: object
          properties:
            allocations:
              type: array
              items:
                $ref: '#/components/schemas/CopyAllocation'
            positions:
              type: array
              items:
                $ref: '#/components/schemas/Position'
            performance_history:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  pnl:
                    type: number
                    format: decimal
                  fees:
                    type: number
                    format: decimal
                  alignment_rate:
                    type: number
                    format: decimal

    CopyAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        trader_id:
          type: string
        trader_alias:
          type: string
        weight:
          type: number
          format: decimal
        status:
          type: string
          enum: [active, paused, error]
        allocated_pnl:
          type: number
          format: decimal
        allocated_fees:
          type: number
          format: decimal
        created_at:
          type: string
          format: date-time

    CreateCopyStrategyRequest:
      type: object
      required:
        - name
        - allocations
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        mode:
          type: string
          enum: [portfolio, single_trader]
          default: "portfolio"
        max_leverage:
          type: number
          format: decimal
          minimum: 1
          maximum: 100
        max_position_usd:
          type: number
          format: decimal
          minimum: 0
        slippage_bps:
          type: integer
          minimum: 0
          maximum: 1000
        min_order_usd:
          type: number
          format: decimal
          minimum: 1
        follow_new_entries_only:
          type: boolean
          default: true
        auto_rebalance:
          type: boolean
          default: true
        allocations:
          type: array
          minItems: 1
          maxItems: 3
          items:
            type: object
            required:
              - trader_id
              - weight
            properties:
              trader_id:
                type: string
              weight:
                type: number
                format: decimal
                minimum: 0.01
                maximum: 1

    UpdateCopyStrategyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        max_leverage:
          type: number
          format: decimal
          minimum: 1
          maximum: 100
        max_position_usd:
          type: number
          format: decimal
          minimum: 0
        slippage_bps:
          type: integer
          minimum: 0
          maximum: 1000
        min_order_usd:
          type: number
          format: decimal
          minimum: 1
        follow_new_entries_only:
          type: boolean
        auto_rebalance:
          type: boolean

    UpdateAllocationsRequest:
      type: object
      required:
        - allocations
      properties:
        allocations:
          type: array
          minItems: 1
          maxItems: 3
          items:
            type: object
            required:
              - trader_id
              - weight
            properties:
              trader_id:
                type: string
              weight:
                type: number
                format: decimal
                minimum: 0.01
                maximum: 1

    CopyStrategyStatus:
      type: object
      properties:
        strategy_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [paused, active, error, terminated]
        health_score:
          type: number
          format: decimal
          minimum: 0
          maximum: 100
        alignment_rate:
          type: number
          format: decimal
        last_signal_at:
          type: string
          format: date-time
        last_execution_at:
          type: string
          format: date-time
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        drift_analysis:
          type: object
          properties:
            total_drift_usd:
              type: number
              format: decimal
            max_position_drift_pct:
              type: number
              format: decimal
            alignment_issues:
              type: array
              items:
                type: object
                properties:
                  symbol:
                    type: string
                  target_exposure:
                    type: number
                    format: decimal
                  current_exposure:
                    type: number
                    format: decimal
                  drift_pct:
                    type: number
                    format: decimal

    # Wallet Schemas
    AgentWallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        exchange:
          type: string
          default: "hyperliquid"
        address:
          type: string
        status:
          type: string
          enum: [active, inactive, suspended]
        min_order_usd:
          type: number
          format: decimal
        max_leverage:
          type: integer
        permissions:
          type: object
          properties:
            trade:
              type: boolean
            withdraw:
              type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateAgentWalletRequest:
      type: object
      required:
        - exchange
      properties:
        exchange:
          type: string
          default: "hyperliquid"
        min_order_usd:
          type: number
          format: decimal
          minimum: 1
          default: 5
        max_leverage:
          type: integer
          minimum: 1
          maximum: 100
          default: 5
        permissions:
          type: object
          properties:
            trade:
              type: boolean
              default: true
            withdraw:
              type: boolean
              default: false

    # Position Schema
    Position:
      type: object
      properties:
        id:
          type: string
          format: uuid
        symbol:
          type: string
        side:
          type: string
          enum: [long, short]
        quantity:
          type: number
          format: decimal
        entry_price:
          type: number
          format: decimal
        mark_price:
          type: number
          format: decimal
        unrealized_pnl:
          type: number
          format: decimal
        realized_pnl:
          type: number
          format: decimal
        leverage:
          type: number
          format: decimal
        margin_used:
          type: number
          format: decimal
        opened_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time

    # Billing Schemas
    FeeRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fee_type:
          type: string
          enum: [trading, copy, management, performance]
        fee_category:
          type: string
        fee_bps:
          type: integer
        fee_amount:
          type: number
          format: decimal
        fee_currency:
          type: string
          default: "USD"
        notional_amount:
          type: number
          format: decimal
        calculation_base:
          type: string
        period_start:
          type: string
          format: date-time
        period_end:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    FeeSummary:
      type: object
      properties:
        total_fees:
          type: number
          format: decimal
        trading_fees:
          type: number
          format: decimal
        copy_fees:
          type: number
          format: decimal
        management_fees:
          type: number
          format: decimal
        performance_fees:
          type: number
          format: decimal
        fee_currency:
          type: string
          default: "USD"
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Authentication failed
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"
              message:
                type: string
                example: "Invalid or expired authentication token"

    ValidationError:
      description: Validation failed
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Validation Error"
              message:
                type: string
                example: "Request validation failed"
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: string

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Requested resource not found"

    RateLimitError:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Rate Limit Exceeded"
              message:
                type: string
                example: "Too many requests, please try again later"
              retry_after:
                type: integer
                example: 60

tags:
  - name: Market Data
    description: Real-time market data and analytics endpoints
  - name: Traders
    description: Trader discovery and analysis endpoints
  - name: Copy Trading
    description: Copy trading strategy management endpoints
  - name: Wallets
    description: Agent wallet management endpoints
  - name: Billing
    description: Fee management and billing endpoints
